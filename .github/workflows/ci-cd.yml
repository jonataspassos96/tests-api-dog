name: CI/CD Pipeline - Docker & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Permite execução manual

permissions:
  contents: write
  actions: read
  checks: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  test-docker:
    runs-on: ubuntu-latest
    name: Docker Test & Report
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup JDK 21 (Docker)
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies  
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: docker-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          docker-m2-
      
    - name: Verify Docker Environment
      run: |
        echo "🐳 Docker Environment Information:"
        echo "📋 OS Info: $(lsb_release -a 2>/dev/null || cat /etc/os-release)"
        echo "🖥️  Architecture: $(uname -m)"
        echo "☕ Java Version:"
        java -version
        echo "📦 Maven Version:"
        mvn --version
        echo "🐳 Docker Version:"
        docker --version
        
    - name: Run Docker Tests
      run: |
        echo "🐳 Running tests with Docker..."
        make test-docker
        
    - name: Generate Allure Report (Docker)
      run: |
        echo "📊 Generating Allure report..."
        mvn allure:report
        echo "✅ Docker execution completed!"
      if: always()
      continue-on-error: true
      
    - name: Verify Docker execution results
      run: |
        echo "📁 Verifying Docker execution results..."
        echo "🔍 Checking target directory structure..."
        
        if [ -d "target" ]; then
          echo "✅ Target directory exists"
          ls -la target/
          
          if [ -d "target/surefire-reports" ]; then
            echo "✅ Surefire reports generated"
            testFiles=$(find target/surefire-reports -name "*.xml" | wc -l)
            echo "   Found $testFiles test report files"
          fi
          
          if [ -d "target/allure-results" ]; then
            echo "✅ Allure results generated"
            allureFiles=$(ls target/allure-results | wc -l)
            echo "   Found $allureFiles allure result files"
          fi
          
          if [ -f "target/site/allure-maven-plugin/index.html" ]; then
            echo "✅ Allure HTML report generated successfully"
            reportSize=$(stat -c%s target/site/allure-maven-plugin/index.html)
            echo "   Report size: $reportSize bytes"
          else
            echo "⚠️ Allure HTML report not found"
          fi
        else
          echo "❌ Target directory not found - Docker execution may have failed"
        fi
      if: always()
      continue-on-error: true
      
    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: TestNG Results (Docker)
        path: target/surefire-reports/TEST-*.xml
        reporter: java-junit
        fail-on-error: false
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: docker-test-results
        path: |
          target/surefire-reports/
          target/allure-results/
          target/site/allure-maven-plugin/
        retention-days: 30
        
    - name: Test Results Summary
      if: always()
      run: |
        echo "## 📊 Test Results Summary (Docker)" >> $GITHUB_STEP_SUMMARY
        if [ -f "target/surefire-reports/testng-results.xml" ]; then
          echo "✅ TestNG results generated" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -d "target/allure-results" ]; then
          echo "✅ Allure results generated" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -d "target/site/allure-maven-plugin" ]; then
          echo "✅ Allure HTML report generated" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📋 **Next Steps:**" >> $GITHUB_STEP_SUMMARY
        echo "- Check artifacts for detailed reports" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "- Allure report will be deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
        fi

  deploy:
    needs: test-docker
    runs-on: ubuntu-latest
    name: Deploy Reports to GitHub Pages
    if: github.ref == 'refs/heads/main' && always()
    
    steps:
    - name: Download Allure report (Docker)
      uses: actions/download-artifact@v4
      with:
        name: docker-test-results
        path: test-results
        
    - name: Debug artifact structure
      run: |
        echo "🔍 Debugging artifact structure..."
        find test-results -type f -name "*.html" | head -10
        if [ -f "test-results/site/allure-maven-plugin/index.html" ]; then
          echo "✅ Found Allure index.html"
          ls -la test-results/site/allure-maven-plugin/
        else
          echo "❌ Allure index.html not found"
          echo "📁 Available structure:"
          find test-results -type d | head -10
        fi

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: hashFiles('test-results/site/allure-maven-plugin/index.html') != ''
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: test-results/site/allure-maven-plugin
        destination_dir: reports
        
    - name: Deploy Summary
      if: always()
      run: |
        echo "## 🚀 Deploy Summary" >> $GITHUB_STEP_SUMMARY
        if [ -f "test-results/site/allure-maven-plugin/index.html" ]; then
          echo "✅ Allure report deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
          echo "📊 **View Report:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/reports/" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ No Allure report found for deployment" >> $GITHUB_STEP_SUMMARY
          echo "🔍 **Debug info:** Check 'Debug artifact structure' step above" >> $GITHUB_STEP_SUMMARY
        fi